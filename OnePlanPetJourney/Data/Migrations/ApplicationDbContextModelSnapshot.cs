// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnePlanPetJourney.Data;

#nullable disable

namespace OnePlanPetJourney.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("OnePlanPetJourney.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeliveryAddressLineOne")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeliveryAddressLineTwo")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeliveryCity")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeliveryPostalCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhysicalAddressLineOne")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhysicalAddressLineTwo")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhysicalCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhysicalPostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("OnePlanPetJourney.Models.BankingDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountHolder")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountPayersID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankAccountType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfirmPhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ConsentConfirm")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DebitDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("HearAboutUs")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PolicyStart")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("SecondStartDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isPassport")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isPersonal")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BankingDetails");
                });

            modelBuilder.Entity("OnePlanPetJourney.Models.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CatCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<int>("DogCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Province")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("OnePlanPetJourney.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddOns")
                        .HasColumnType("TEXT");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BreedSize")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChipNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Injuries")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDog")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsMale")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsNeutered")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MedicalCondition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlanType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PreferredVet")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LeadId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("OnePlanPetJourney.Models.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PlanPrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("OnePlanPetJourney.Models.PolicyHolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AltMobileNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("hasConcented")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("marketing")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PolicyHolder");
                });

            modelBuilder.Entity("OnePlanPetJourney.Models.Pet", b =>
                {
                    b.HasOne("OnePlanPetJourney.Models.Lead", null)
                        .WithMany("Pets")
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnePlanPetJourney.Models.Lead", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
